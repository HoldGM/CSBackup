#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
# 
# Otis Brower
#	UT EID - ODB234
# Due Date: 5/8/2015
#
#	Solution:
#	Used iaddl command to combine irmovl and addl actions
# to reduce the number of needed instructions
#
# Unrolled loops using esi and edi to handle 2 elements for each
# loop.
#
# Data Hazard avoidance with forwarding
# mrmovl (%ebx), %esi
# bubble
# rmmovl %esi, (%ecx)
# mrmovl 4(%ebx), %edi
# bubble
#
#
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
					xorl 		%eax,	%eax		# count = 0;
					iaddl 	$-1, %edx
					jle 		Npos3					# if so, goto Done:
Loop:
					mrmovl 	(%ebx), %esi	# fetch from src
					mrmovl	4(%ebx), %edi	# fetch from src
					rmmovl 	%esi, (%ecx)	# save to dst
					rmmovl 	%edi, 4(%ecx)	# save to dst
					andl 		%esi, %esi		# check val <= 0
					jle 		E1						# if so, goto E1:
					iaddl 	$1, %eax			# inc. count
E1:
					andl 		%edi, %edi		# check val <= 0
					jle 		E2						# if so, goto E2:
					iaddl 	$1, %eax			# inc. count
E2:
					iaddl 	$8, %ebx			# inc. src
					iaddl 	$8, %ecx			# inc dst
					iaddl		$-2, %edx			# dec. len
					jg 			Loop			 		# loop
E3:
					jne 		Done
					mrmovl 	(%ebx), %esi	# fetch from src
					rmmovl  %esi, (%ecx)	# save to dst
					andl 		%esi, %esi		# check val <= 0
					jle 		Done				
					iaddl 	$1, %eax			# inc. count

				
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
