Homework: 8
Student Name: Otis Brower
EID: odb234
CS Login: odb234
Email Address: odb234@utexas.edu
Unique Number: 50735



1.  Question 9.19, page 852 in the Second Edition,
     page 880 in the Third Edition, B&O.
     
      1. (a) In a buddy system, up to 50%  of the space can be wasted due to internal fragmentation.
    
         (b) The first-fit memory allocation algorithm is slower than the best-fit algorithm (on average).

          -->>(c) Deallocation using boundary tags is fast only when the list of free  blocks is ordered 
             according to increasing memory addresses.

         (d) The buddy system suffers from  internal fragmentation, but  not  from external fragmentation.
  	
      2. (a) Using the first-fit  algorithm on  a free  list  that  is ordered according to decreasing block
             sizes  results in  low  performance for allocations, but avoids external fragmentation.
     
         (b)  For the best-fit method, the list of free blocks should be ordered according to increasing memory
              addresses.
         
         (c)  The best-fit method chooses the largest free block  into which  the requested segment fits.
         
         -->>(d)  Using  the  first-fit  algorithm on a free list that is ordered according to increasing block sizes
              is equivalent to using the best-fit algorithm.

      3. Mark & sweep garbage collectors are called conservative  if:
         (a)  They coalesce freed  memory only  when  a memory  request cannot be satisfied.
         
         -->>(b)  They treat everything that  looks like a pointer as a pointer.
         
         (c)  They perform garbage collection only when they run out of memory. 
         
         (d)  They do not free memory blocks forming a cyclic list.

 
2.  (Adapted from Tannenbaum Chapter 5 Number 24.)
    Disk requests come into the disk driver for tracks 
    10, 22, 20, 2, 40, 6, and 38, in that order. 
    A seek takes 6 msec per track moved.

    In all cases, the arm is initially at track 20, and you may assume that the head is traveling
     towards higher numbers. 
     
    How much seek time is needed for the following scheduling algorithms? 
      2a) FIFO .876s

      2b) SSTF .360s

      2c) LOOK (SCAN, but doesn't move to the end) .348s


3.  Suppose I have a disk such as the 320GB SATA drive described here and I have a workload 
    consisting of 10,000 reads to sectors randomly scattered across the disk. 
    How long will these 10,000 request take (total) assuming the disk services requests in FIFO order? 

    10000(12.0 + 5.5 + 0.0047) = 175.047s


4. Some file allocation schemes limit the size of the file whether or not there is enough space
   for a larger file. 

   Which ones and why? 
   1. Linked: No Limit
   
   2. Direct: The size is limited to the number of pointers that can be saved in a block
   
   3. Contiguous: No Limit
   
   4. Multi-Level index: limited but huge 
   
   5. Extents: No Limit

5. How does a journaling file system maintain file system consistency even in the event of a crash? 
Name an example of a journaling file system.

  Everything is writen in a specific order, so if there is a system crash the system can determine 
  what data is missing based on the last step of the write process was completed.