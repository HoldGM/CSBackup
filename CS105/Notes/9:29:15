9/29/15


Sample code:

#include <iostream>
#include <vector>
#include <string>

using namespace std;

class A{
	A(int): id(id){}
	int id;
}

void f(A a){
	a.id = 100;
}

int main(int argc, char const **argv){
	vector<int>v;
	vector<A> v2(10);
	vector<A*> v3;

	v.push_back(5);
	v.push_back(3);

	cout << v[0] << endl;
	A a1(3);
	A a2(7);
	f(a1);
	cout << a1.id << endl; //output is 3
	v2.push_back(a1);		//creates copy of a1 and pushed to vector
	v3.push_back(&a2);
	A* pa = v3[0];			//working with original object

	for(vector<int>::iterator iter = v.begin(); iter != n.end; ++iter0{
		cout << *iter << endl;
	}

	return 1;
}





Notes:
const (read only)
	read right to left
		operates on the thing to the left
			if nothing on lect, act on right
Use cond to say that whatever you are referring to can't be modified
	Arrays
		void youCantModifyMe(const int[])
	classes
