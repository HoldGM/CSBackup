Agenda
	KVC/KVO
	Notifications
	MapKit
	Homework6
	Project


KVC
	KVC - Key Value Coding
		the ability to read and set a property using its name
		there are default implementations of the relevant methods found in NSObject
			setValue:forKey:
			valueForKey:
		So, any class that derives from NSObject gets this for free
		The use of these methods happen behind the scenes, or we can call them directly

	KVO - Key Value Observing
		A mechanism that allows object to be notifies of changes to specified properties of other objects
		you can use key-value observing with swift class, as long as the class inherits from the NSObject class
			which swift classes do not inherit by default

	to use KVO
		Add dynamic in front of any property you want to monitor
		add an observer for any proprty you want to monitor
		implement the observeValueForkeyPath method
		make sure to remove the observver in deinit
	Add dynamic in from of any property

		class myObserverdClass: NSObject{
		dynamic var myObserveredProperty = "Hi"
		func updatePoperty(newValue:String)
		}

	Add observer for the property you want to monitor
		pricvate var myContext = 0
		objectToObserve.addObserver(self, forKeyPath: "myObserveredProperty", options[.Old, .New], context: &myContext)

		objectToObserve is the object that contains the property we want to monitor
		the first argument is the object that is registered as the observer
		the options
	
	Method to get called when property changes
		override func observeValueForKeypath()


Notifications
	What are notifications in iOS?
		an implementation of the Obsever design pattern
	What is the observer design pattern?
		The observer pattern is a software design pattern in which an object maintains a list of observers and notfies them automatically of an event they've registered for
		it is mainly used to implement loosley-coupled distributed even handling


	remote notifications
		remote notifications are generated by somethign outside your application
		they are sent through APNS (Apple Push Notification Server)
		Much more complicated than local notifications are recieved by your device iOS displays them in a little pop-down
		if you touch a remote notification iOS will launch you app (if it isn't already running) or bring it to the foreground (if it's in the background) and hand off the notification to you



Scheduled Local Notifications
	TBD:

MapKit
	An API that makes it easy to display maps, plot locations, draw routes and other shapes on top of the map
		element drawn on top of the map are called overlays
	you can choose what kind of map of map is rederend
		standard
		satallite
		hybrid
	you can define pins( annotaitons) for locations of interes
		you can define the color of pins
		you can defines other things too
	import MapKit
		include an MKMapView somewhere in a niew controller
		have some number of coordinates to be able to manipulate map.
		